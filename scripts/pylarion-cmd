#!/usr/bin/env python

import os
from pylarion.cli.cmd import Repo
from pylarion.cli.cmd import Config
from pylarion.cli.cmd import CmdList
from pylarion.cli.cmd import CmdCreate
from pylarion.cli.cmd import CmdUpdate

import click

@click.group()
def cli():
    click.echo(" ~~~~~~~ WELCOME TO COMMANDS WORLD ~~~~~~")

@cli.command()
@click.option("-d", "--document",
              help="document name.")
@click.option("-e", "--query",
              help="query items")
@click.option("-D", "--debug",
              default=True,
              is_flag=True,
              help="debug mode")
@click.option("-i", "--testcase",
              help="testcase id")
@click.option("-l", "--links",
              type=click.Choice(['is verified',
                                 'verifies',
                                 'relate to',
                                 'is related to']),
              help="links of workitem")
@click.option("-m", "--template",
              help="test run template")
@click.option("-n", "--plannedin",
              help="plannedin in run")
@click.option("-p", "--plan_ids",
              help="plan ids in project")
@click.option("-q", "--requirement",
              help="requirement id")
@click.option("-r", "--run",
              help="test run")
@click.option("-s", "--steps",
              is_flag=True,
              help="steps of testcase")
@click.option("-t", "--workitem_type",
              type=click.Choice(['testcase',
                                 'requirement']),
              help="workitem type.")

@click.pass_context
def list(ctx,
         document,
         query,
         debug,
         testcase,
         links,
         template,
         plannedin,
         plan_ids,
         requirement,
         run,
         steps,
         workitem_type,
):
    '''list documents, testcases, steps of testcase, 
       links of workitems, runs, templates'''
    click.echo("+++++ list +++++++")
    ctx.obj = Repo(document,
                   query,
                   debug,
                   testcase,
                   links,
                   template,
                   plannedin,
                   plan_ids,
                   requirement,
                   run,
                   steps,
                   workitem_type)
    print "query=%s" % ctx.obj.query
    print "debug=%s" % ctx.obj.debug
    print "assignee=%s" % ctx.obj.assignee

    condict = Config().getconf("/home/xhe/.pylarion")

    print '\n------get all document-------------'
    list_obj = CmdList(condict['project'],
                       condict['con_space'])

    list_obj.list_all_documents_under_space() 

    print '\n------query document-------------'
    query='author.id:xhe'
    list_obj.print_documents(list_obj.list_documents_by_query(query),
                         fields=['document_id',
                                 'document_name',
                                 'author',
                                 'updated',
                                 'updated_by'])
 
    print '\n------get all workitems in document-------------'
    wis = list_obj.list_workitems_in_document('KernelStorageQE/KS FCoE Intel fcoe Test Specification')
    list_obj.print_workitems(wis)
    wis = list_obj.list_workitems_in_document('KernelStorageQE/KS FCoE Requirement Specification')
    list_obj.print_workitems(wis)

    print '\n------get links for testcase-------------'
    list_obj.print_links_for_testcase("RHEL6-3245")
    
    print '\n------get links for requirement-------------'
    list_obj.print_links_for_requirement("RHEL6-3204")

    print '\n------get runs by query-------------'
    list_obj.list_runs_by_query('author.id:xhe')

    print '\n------get steps for testcase-------------'
    list_obj.print_steps_for_testcase('RHEL6-3245')


@cli.command()
def update():
    """ update run, test steps"""
    click.echo("update")


@cli.command()
def create():
    """ create run"""
    click.echo("create")


if __name__ == "__main__":
    cli()
